{"ast":null,"code":"import { redirect } from \"react-router-dom\";\nexport function getTokenDuration() {\n  const storedExpirationDate = localStorage.getItem(\"expiration\");\n  if (!storedExpirationDate) {\n    return -1; // treat as expired\n  }\n  const expirationDate = new Date(storedExpirationDate);\n  if (isNaN(expirationDate.getTime())) {\n    return -1;\n  }\n  const now = new Date();\n  return expirationDate.getTime() - now.getTime();\n}\nexport function getAuthToken() {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    return;\n  }\n  const tokenDuration = getTokenDuration();\n  if (tokenDuration < 0) {\n    return \"EXPIRED\";\n  }\n  return token;\n}\nexport function tokenLoader() {\n  return getAuthToken();\n}\n\n// Protect routes:\nexport function checkAuthLoader() {\n  const token = getAuthToken();\n  if (!token) {\n    return redirect(\"/auth\");\n  }\n  return token;\n}","map":{"version":3,"names":["redirect","getTokenDuration","storedExpirationDate","localStorage","getItem","expirationDate","Date","isNaN","getTime","now","getAuthToken","token","tokenDuration","tokenLoader","checkAuthLoader"],"sources":["D:/REACT/Auth/frontend/src/util/auth.js"],"sourcesContent":["import { redirect } from \"react-router-dom\";\r\n\r\nexport function getTokenDuration() {\r\n  const storedExpirationDate = localStorage.getItem(\"expiration\");\r\n  if (!storedExpirationDate) {\r\n    return -1; // treat as expired\r\n  }\r\n\r\n  const expirationDate = new Date(storedExpirationDate);\r\n  if (isNaN(expirationDate.getTime())) {\r\n    return -1;\r\n  }\r\n\r\n  const now = new Date();\r\n  return expirationDate.getTime() - now.getTime();\r\n}\r\n\r\nexport function getAuthToken() {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (!token) {\r\n    return;\r\n  }\r\n\r\n  const tokenDuration = getTokenDuration();\r\n\r\n  if (tokenDuration < 0) {\r\n    return \"EXPIRED\";\r\n  }\r\n\r\n  return token;\r\n}\r\n\r\nexport function tokenLoader() {\r\n  return getAuthToken();\r\n}\r\n\r\n// Protect routes:\r\nexport function checkAuthLoader() {\r\n  const token = getAuthToken();\r\n\r\n  if (!token) {\r\n    return redirect(\"/auth\");\r\n  }\r\n\r\n  return token;\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAE3C,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EACjC,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC/D,IAAI,CAACF,oBAAoB,EAAE;IACzB,OAAO,CAAC,CAAC,CAAC,CAAC;EACb;EAEA,MAAMG,cAAc,GAAG,IAAIC,IAAI,CAACJ,oBAAoB,CAAC;EACrD,IAAIK,KAAK,CAACF,cAAc,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;IACnC,OAAO,CAAC,CAAC;EACX;EAEA,MAAMC,GAAG,GAAG,IAAIH,IAAI,CAAC,CAAC;EACtB,OAAOD,cAAc,CAACG,OAAO,CAAC,CAAC,GAAGC,GAAG,CAACD,OAAO,CAAC,CAAC;AACjD;AAEA,OAAO,SAASE,YAAYA,CAAA,EAAG;EAC7B,MAAMC,KAAK,GAAGR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACO,KAAK,EAAE;IACV;EACF;EAEA,MAAMC,aAAa,GAAGX,gBAAgB,CAAC,CAAC;EAExC,IAAIW,aAAa,GAAG,CAAC,EAAE;IACrB,OAAO,SAAS;EAClB;EAEA,OAAOD,KAAK;AACd;AAEA,OAAO,SAASE,WAAWA,CAAA,EAAG;EAC5B,OAAOH,YAAY,CAAC,CAAC;AACvB;;AAEA;AACA,OAAO,SAASI,eAAeA,CAAA,EAAG;EAChC,MAAMH,KAAK,GAAGD,YAAY,CAAC,CAAC;EAE5B,IAAI,CAACC,KAAK,EAAE;IACV,OAAOX,QAAQ,CAAC,OAAO,CAAC;EAC1B;EAEA,OAAOW,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}